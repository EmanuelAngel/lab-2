import { PORT, NODE_ENV } from '../config/env.js'
import app from '../app.js'
import { createServer } from 'node:http'

const server = createServer(app)

server.listen(PORT)

server.on('error', onError)
server.on('listening', onListening)

function onError (error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const bind = typeof PORT === 'string' ? `Pipe ${PORT}` : `Port ${PORT}`

  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`)
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`)
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening () {
  const addr = server.address()
  const bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`
  
  console.clear()
  
  NODE_ENV === 'development'
    ? console.log(
      `Server listening on ${bind}`,
      `\nIndex on: http://localhost:${PORT}`
      )
    : console.log(`Server listening on ${bind} in ${NODE_ENV} mode`)
}
