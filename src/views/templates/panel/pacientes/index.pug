extends ../../../layouts/base-layout

block styles 
  style.
    th {
      text-align: center;
    }

block navbar
  include ../../../partials/NavBar

block content
  .row
    .col-md-12.d-grid.gap-4
      h1 Pacientes
      if user.id_rol == 1
        a.btn.btn-primary.d-flex.gap-2.justify-content-center(
          style="width: max-content",
          href="/auth/register"
          )
          i.bi.bi-plus
          |Registrar Paciente
      .table-responsive
        table#tablaPacientes.table.table-striped.table-bordered.align-middle
          thead
            tr.align-middle
              th Nombre de Usuario
              th Nombre
              th Apellido
              th DNI
              th Obra/s Social/es
              th Teléfono 
              th Dirección
              th E-mail
              th Estado
              if user.id_rol == 1 || user.id_rol == 2
                th Acciones
          tbody
            each paciente in pacientes
              tr 
                td= paciente.nombre_usuario
                td= paciente.nombre
                td= paciente.apellido
                td= paciente.dni
                td
                  if paciente.obras_sociales && paciente.obras_sociales.length > 0
                    .d-flex.flex-column.gap-2
                      each obra_social in paciente.obras_sociales
                        if obra_social == null
                          span Sin Obra Social
                        else
                          span.badge.bg-secondary= obra_social.obra_social
                  else
                    span Sin Obra Social

                td= paciente.telefono
                td= paciente.direccion
                td= paciente.email 
                td 
                  if paciente.estado_paciente
                    span.badge.bg-success Activo
                  else
                    span.badge.bg-danger Inactivo
                if user.id_rol == 1 || user.id_rol == 2
                  td
                    a.btn.btn-outline-primary.border-0.d-flex.gap-2.mb-2(
                      href=`/panel/pacientes/edit/${paciente.id_paciente}`
                      )
                      i.bi.bi-pencil
                      | Editar
                    if paciente.estado_paciente
                      button.btn.btn-outline-danger.border-0.d-flex.gap-2.deactivate-paciente(
                        data-id=paciente.id_paciente
                      )
                        i.bi.bi-ban
                        | Desactivar
                    else
                      a.btn.btn-outline-success.border-0.d-flex.gap-2.activate-paciente(
                        data-id=paciente.id_paciente
                        )
                        i.bi.bi-check-lg  
                        | Activar

  div.modal.fade#deactivateModal(
    tabindex="-1",
    aria-labelledby="deactivateModalLabel",
    aria-hidden="true"
  )
    div.modal-dialog.modal-dialog-centered
      div.modal-content
        div.modal-header
          h5.modal-title#deactivateModalLabel Confirmar Desactivación
        div.modal-body
          p ¿Está seguro que desea desactivar este paciente?
        div.modal-footer
          button.btn.btn-secondary(type="button", data-bs-dismiss="modal") Cancelar
          button.btn.btn-danger#confirmDeactivate(type="button") Desactivar

  div.modal.fade#activateModal(
    tabindex="-1",
    aria-labelledby="activateModalLabel",
    aria-hidden="true"
  )
    div.modal-dialog.modal-dialog-centered
      div.modal-content
        div.modal-header
          h5.modal-title#activateModalLabel Confirmar Activación
        div.modal-body
          p ¿Está seguro que desea activar este paciente?
        div.modal-footer
          button.btn.btn-secondary(type="button", data-bs-dismiss="modal") Cancelar
          button.btn.btn-success#confirmActivate(type="button") Activar

block scripts
  script(type='module').
    import { showToast } from '/js/showToast.js';

    initTable({ tableId: '#tablaPacientes' })

    let idPaciente;

    // Función para agregar event listeners a los botones de desactivar
    const addDeactivateListeners = () => {
      const deactivateButtons = document.querySelectorAll('.deactivate-paciente');
      deactivateButtons.forEach((button) => {
        button.addEventListener('click', (e) => {
          idPaciente = button.getAttribute('data-id');
          const modal = new bootstrap.Modal(document.getElementById('deactivateModal'));
          modal.show();
        });
      });
    };

    // Función para agregar event listeners a los botones de activar
    const addActivateListeners = () => {
      const activateButtons = document.querySelectorAll('.activate-paciente');
      activateButtons.forEach((button) => {
        button.addEventListener('click', (e) => {
          idPaciente = button.getAttribute('data-id');
          const modal = new bootstrap.Modal(document.getElementById('activateModal'));
          modal.show();
        });
      });
    };

    // Inicializar los listeners
    addDeactivateListeners();
    addActivateListeners();

    // Función para activar paciente
    const activatePaciente = () => {
      fetch(`/pacientes/${idPaciente}/activate`, {
        method: 'PATCH',
      })
        .then((res) => {
          if (res.ok) {
            // Encontrar la fila del paciente
            const row = document.querySelector(`a[data-id="${idPaciente}"]`).closest('tr');
            
            // Actualizar el estado
            const estadoCell = row.querySelector('td:nth-last-child(2)');
            estadoCell.innerHTML = '<span class="badge bg-success">Activo</span>';
            
            // Actualizar los botones
            const actionCell = row.querySelector('td:last-child');
            actionCell.innerHTML = `
              <a class="btn btn-outline-primary border-0 d-flex gap-2 mb-2" href="/panel/pacientes/edit/${idPaciente}">
                <i class="bi bi-pencil"></i>
                Editar
              </a>
              <button class="btn btn-outline-danger border-0 d-flex gap-2 deactivate-paciente" data-id="${idPaciente}">
                <i class="bi bi-ban"></i>
                Desactivar
              </button>
            `;

            // Agregar el listener al nuevo botón de desactivar
            addDeactivateListeners();
            
            showToast('Paciente <strong>ACTIVADO</strong> correctamente', 'success');
          } else {
            showToast('<strong>Error</strong> al activar el paciente', 'warning');
          }
        })
        .catch((err) => {
          console.error(err);
          showToast('<strong>Error fatal</strong> al activar el paciente', 'danger');
        });

      const modal = bootstrap.Modal.getInstance(document.getElementById('activateModal'));
      modal.hide();
    };

    // Event listener para el botón de confirmar activación
    document.getElementById('confirmActivate').addEventListener('click', activatePaciente);

    // Event listener para el botón de confirmar desactivación
    document.getElementById('confirmDeactivate').addEventListener('click', () => {
      fetch(`/pacientes/${idPaciente}`, {
        method: 'DELETE',
      })
        .then((res) => {
          if (res.ok) {
            // Encontrar la fila del paciente
            const row = document.querySelector(`button[data-id="${idPaciente}"]`).closest('tr');
            
            // Actualizar el estado
            const estadoCell = row.querySelector('td:nth-last-child(2)');
            estadoCell.innerHTML = '<span class="badge bg-danger">Inactivo</span>';
            
            // Actualizar los botones
            const actionCell = row.querySelector('td:last-child');
            actionCell.innerHTML = `
              <a class="btn btn-outline-primary border-0 d-flex gap-2 mb-2" href="/panel/pacientes/edit/${idPaciente}">
                <i class="bi bi-pencil"></i>
                Editar
              </a>
              <a class="btn btn-outline-success border-0 d-flex gap-2 activate-paciente" data-id="${idPaciente}">
                <i class="bi bi-check-lg"></i>
                Activar
              </a>
            `;

            // Agregar el listener al nuevo botón de activar
            addActivateListeners();
            
            showToast('Paciente <strong>DESACTIVADO</strong> correctamente', 'success');
          } else {
            showToast('<strong>Error</strong> al desactivar el paciente', 'warning');
          }
        })
        .catch((err) => {
          console.error(err);
          showToast('<strong>Error fatal</strong> al desactivar el paciente', 'danger');
        });

      const modal = bootstrap.Modal.getInstance(document.getElementById('deactivateModal'));
      modal.hide();
    });