extends ../../layouts/base-layout

block navbar 
  include ../../lib/NavBar

block styles 
  style.
    #login-form {
      max-width: 512px;
      margin: 0 auto;
    }

block content
  form#login-form
    fieldset.mb-3 
      label.form-label(for="nombre-de-usuario") Nombre de usuario
      input.form-control(
        type="text"
        name="nombre_usuario"
        id="nombre-de-usuario"
        placeholder="Nombre de usuario"
        required
        )
    fieldset.mb-3 
      label.form-label(for="contrasenia") Contraseña
      input.form-control(
        type="password"
        name="contraseña"
        id="contraseña"
        placeholder="Contraseña"
        required
        value="12341234"
        )
    input.btn.btn-primary(type="submit" value="Iniciar sesión")

block scripts 
  script(type="module").
    import { showToast } from '/js/showToast.js'
    import {
      baseValidationRules,
      validateField
    } from '/js/baseValidation.js'

    const loginValidationRules = {
      nombre_usuario: baseValidationRules.nombre_usuario,
      contraseña: baseValidationRules.contraseña
    }

    const loginForm = document.querySelector('#login-form')
    loginForm.addEventListener('submit', handleSubmit)

    loginForm.querySelectorAll('input').forEach(input => {
      input.addEventListener('blur', () => {
        validateField(input, loginValidationRules)
      })
    })

    async function handleSubmit(event) {
      event.preventDefault()
      
      let isValid = true
      loginForm.querySelectorAll('input').forEach(field => {
        if (!validateField(field, loginValidationRules)) {
          isValid = false
        }
      })

      if (!isValid) {
        showToast('Por favor, corrija los errores en el formulario', 'danger')
        return
      }

      const formData = new FormData(loginForm)
      const nombre_usuario = formData.get('nombre_usuario')
      const contraseña = formData.get('contraseña')
      
      const submitButton = loginForm.querySelector('input[type="submit"]')
      submitButton.disabled = true
      submitButton.value = 'Iniciando sesión...'

      try {
        const res = await fetch('/auth/login', {
          method: 'POST',
          body: JSON.stringify({ nombre_usuario, contraseña }),
          headers: {
            'Content-Type': 'application/json'
          }
        })

        const data = await res.json()

        if (!res.ok) {
          showToast(data.error, 'danger')
          if (res.status === 422) {
            showToast('Datos inválidos', 'danger')
          }
        } else {
          showToast('Sesión iniciada', 'success')
          setTimeout(() => {
            window.location.href = '/'
          }, 2000)
        }
      } catch (error) {
        showToast('Error al iniciar sesión', 'danger')
      } finally {
        submitButton.disabled = false
        submitButton.value = 'Iniciar sesión'
      }
    }
    